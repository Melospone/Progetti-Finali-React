{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\utente\\\\OneDrive\\\\Desktop\\\\Progetti Finali React\\\\jobs\\\\src\\\\components\\\\CompanySearchResults.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompanySearchResults = () => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n  useEffect(() => {\n    getJobs(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n\n      if (response.ok) {\n        const {\n          data\n        } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4\",\n          children: [\"Job posting for: \", params.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n          data: jobData\n        }, jobData._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompanySearchResults, \"dckmTRAm79Ju2O9AWzYTIwDN4qo=\", false, function () {\n  return [useParams];\n});\n\n_c = CompanySearchResults;\nexport default CompanySearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanySearchResults\");","map":{"version":3,"names":["useEffect","useState","Container","Row","Col","Job","useParams","CompanySearchResults","jobs","setJobs","params","baseEndpoint","getJobs","response","fetch","company","ok","data","json","alert","error","console","log","map","jobData","_id"],"sources":["C:/Users/utente/OneDrive/Desktop/Progetti Finali React/jobs/src/components/CompanySearchResults.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport { useParams } from \"react-router-dom\";\n\nconst CompanySearchResults = () => {\n  const [jobs, setJobs] = useState([]);\n  const params = useParams();\n\n  const baseEndpoint = \"https://strive-benchmark.herokuapp.com/api/jobs?company=\";\n\n  useEffect(() => {\n    getJobs();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getJobs = async () => {\n    try {\n      const response = await fetch(baseEndpoint + params.company);\n      if (response.ok) {\n        const { data } = await response.json();\n        setJobs(data);\n      } else {\n        alert(\"Error fetching results\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"my-3\">\n          <h1 className=\"display-4\">Job posting for: {params.company}</h1>\n          {jobs.map(jobData => (\n            <Job key={jobData._id} data={jobData} />\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CompanySearchResults;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMS,MAAM,GAAGJ,SAAS,EAAxB;EAEA,MAAMK,YAAY,GAAG,0DAArB;EAEAX,SAAS,CAAC,MAAM;IACdY,OAAO,GADO,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;;EAKA,MAAMA,OAAO,GAAG,YAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAY,GAAGD,MAAM,CAACK,OAAvB,CAA5B;;MACA,IAAIF,QAAQ,CAACG,EAAb,EAAiB;QACf,MAAM;UAAEC;QAAF,IAAW,MAAMJ,QAAQ,CAACK,IAAT,EAAvB;QACAT,OAAO,CAACQ,IAAD,CAAP;MACD,CAHD,MAGO;QACLE,KAAK,CAAC,wBAAD,CAAL;MACD;IACF,CARD,CAQE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAZD;;EAcA,oBACE,QAAC,SAAD;IAAA,uBACE,QAAC,GAAD;MAAA,uBACE,QAAC,GAAD;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAI,SAAS,EAAC,WAAd;UAAA,gCAA4CV,MAAM,CAACK,OAAnD;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAEGP,IAAI,CAACe,GAAL,CAASC,OAAO,iBACf,QAAC,GAAD;UAAuB,IAAI,EAAEA;QAA7B,GAAUA,OAAO,CAACC,GAAlB;UAAA;UAAA;UAAA;QAAA,QADD,CAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CArCD;;GAAMlB,oB;UAEWD,S;;;KAFXC,oB;AAuCN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}